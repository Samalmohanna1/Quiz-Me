---
import { getCollection, getEntry } from 'astro:content'
import BaseLayout from '../../layouts/BaseLayout.astro'
import Quiz from '../../components/Quiz'

export async function getStaticPaths() {
	const quizzes = await getCollection('quizzes')
	return quizzes.map((quiz) => ({
		params: { slug: quiz.slug },
	}))
}

const { slug } = Astro.params
const quiz = await getEntry('quizzes', slug)

if (!quiz) {
	return Astro.redirect('/404')
}

const { Content } = await quiz.render()
---

<BaseLayout title={quiz.data.title}>
	<section class='content'>
		<div class='quiz-description'>
			<Content />
		</div>
		<div class='quiz'>
			<Quiz quiz={quiz.data} client:load />
		</div>
	</section>

	<div class='center-text'>
		<a href='/#quizGrid' aria-label='back to quiz list.' class='back-btn'
			>Find Another Quiz</a
		>
	</div>
</BaseLayout>

<style is:global>
	.quiz-description {
		border-bottom: 1px solid var(--color-black-100);
	}
	.quiz-description h1 {
		font-size: var(--text-step--1);
		color: var(--color-black-400);
		margin-bottom: var(--spacing-3xs);
	}

	.quiz-description p {
		font-size: var(--text-step--2);
		color: var(--color-black-400);
		margin-bottom: var(--spacing-3xs);
		text-wrap: balance;
	}
</style>
<style>
	.content {
		max-width: 800px;
		margin-block: var(--spacing-l);
		padding: var(--spacing-m);
		background: var(--color-cream-100);
	}

	.center-text {
		margin-block: var(--spacing-l);
	}
	.back-btn {
		display: inline-block;
		padding: var(--spacing-l) var(--spacing-3xl);
		background-color: var(--color-black-500);
		color: var(--color-yellow-400);
		font-weight: 600;
		text-decoration: none;
	}
	.back-btn:hover {
		text-decoration: underline;
		text-underline-position: under;
	}
</style>
